Index: fractalz-electron/src/renderer/components/pages/RegistrationPage.vue
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><template>\r\n  <div class=\"login-page-vertical\">\r\n      <div class=\"form\">\r\n        <div v-if=\"type === 'A'\" class=\"register-form\">\r\n          <p class=\"registration-title\">Регистрация нового пользователя в системе Fractalz!</p>\r\n          <input type=\"text\" v-model=\"login\" placeholder=\"Логин\"/>\r\n          <input type=\"text\" v-model=\"email\" placeholder=\"Почта\"/>\r\n          <input type=\"password\" v-model=\"password\" placeholder=\"Пароль\"/>\r\n          <button class=\"modal-default-button mr-4 navTask dark-teal\" v-on:click=\"singIn()\">Создать</button>\r\n          <p class=\"message\">Уже зарегистрированы? <a v-on:click=\"toSingIn()\">Войти</a></p>\r\n        </div>\r\n        <div v-if=\"type === 'B'\" class=\"login-form\">\r\n          <input type=\"text\" v-model=\"login\" placeholder=\"Логин/Почта\" />\r\n          <input type=\"password\" v-model=\"password\" placeholder=\"Пароль\"\r\n                 @keyup.enter=\"logIn\"/>\r\n          <button class=\"modal-default-button mr-4 navTask dark-teal\" v-on:click=\"logIn()\">Войти</button>\r\n          <button class=\"modal-default-button mr-4 navTask mt-1\" v-if=\"Auth\" style=\"background-color: darkred\" v-on:click=\"logOut()\">Выйти</button>\r\n          <p class= \"message\">Нет аккаута? <a v-on:click=\"toCreateAccount()\">Создать аккаунт</a></p>\r\n          <p class= \"password-reset-text\"> Забыли пароль?</p>\r\n          <p class= \"password-resetbutton\"> <a v-on:click=\"toResetPassword()\">Нажмите чтобы восстановить доступ</a></p>\r\n        </div>\r\n        <div v-if=\"type === 'C'\" class=\"password-reset-form\">\r\n          <p class=\"reset-title\"> Для восстановления доступа вам необходимо сбросить старый пароль и установить новый.\r\n            Для этого мы отправим вам на Email одноразовый код для подтверждения </p>\r\n          <input type=\"text\" v-model=\"existEmail\" placeholder=\"Ваш зарегестрированный Email\"\r\n          @keyup.enter=\"toSendCode\"/>\r\n          <button class=\"modal-default-button mr-4 navTask dark-teal\" v-on:click=\"toSendCode()\">Отправить код</button>\r\n          <input type=\"text\" v-model=\"Authcode\" placeholder=\"Ваш одноразовый код\" />\r\n          <input type=\"password\" v-model=\"newPassword1\" placeholder=\"Новый пароль\"/>\r\n          <input type=\"password\" v-model=\"newPassword2\" placeholder=\"Подтверждение нового пароля\"\r\n          @keyup.enter=\"passReset\"/>\r\n          <button class=\"modal-default-button mr-4 navTask dark-teal\" v-on:click=\"passReset()\">Сохранить</button>\r\n          <p class= \"password-resetbutton-back\"> <a v-on:click=\"toBackFromReset()\">Вернуться назад</a></p>\r\n      </div>\r\n        <div v-if=\"type === 'D'\" class=\"auth-code-form\">\r\n          <p class=\"code-title\">Почти готово!</p>\r\n          <p class=\"Code-code\">Для потверждения введите код который отправлен на указанную вами почту.</p>\r\n          <input type=\"text\" v-model=\"Authcode\" placeholder=\"Код\"\r\n          @keyup.enter=\"toValidateCode\"/>\r\n          <button class=\"modal-default-button mr-4 navTask dark-teal\" v-on:click=\"toValidateCode()\">Подтвердить</button>\r\n          <p class=\"message\"><a v-on:click=\"toCreateAccount()\">Вернуться назад</a></p>\r\n        </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport UserPart from \"../../api/UserPart\";\r\nimport Vue from \"vue\";\r\nimport NotifyCenter from \"../../services/NotifyCenter\";\r\n\r\nexport default {\r\n  name: \"RegistrationPage\",\r\n\r\n  data() {\r\n    return{\r\n      Auth : false,\r\n      isLogin:true,\r\n      GenRequest: true,\r\n      type: 'B',\r\n      password:\"\",\r\n      login : '',\r\n      email : '',\r\n      existEmail:\"\",\r\n      newPassword1: \"\",\r\n      newPassword2: \"\",\r\n      Authcode:\"\",\r\n    }\r\n  },\r\n\r\n  props: {\r\n    api: Object,\r\n    noty: Object\r\n  },\r\n\r\n  mounted() {\r\n    this.Auth = this.isAuth();\r\n    this.api = new UserPart(this.$http);\r\n    this.noty = new NotifyCenter();\r\n  },\r\n\r\n  methods: {\r\n    toCreateAccount : function () {\r\n      return this.type = 'A';\r\n    },\r\n    toSingIn : function () {\r\n      return this.type = 'B';\r\n    },\r\n    toResetPassword : function(){\r\n      return this.type = 'C';\r\n    },\r\n    toBackFromReset:function(){\r\n      return this.type = 'B';\r\n    },\r\n    toSendCode: async function() {\r\n      var result = await this.api.SendCode(this.email, this.GenRequest.true)\r\n    },\r\n\r\n    toValidateCode: async function()\r\n    {\r\n      const titleNoty = \"Регистрация в системе Fractalz\"\r\n      var result = await this.api.ValidateCode(this.Authcode, this.email)\r\n      if (result.data.success)\r\n      {\r\n        this.noty.Show({title: titleNoty, message: \"Добро пожаловать!\"});\r\n        return this.logIn();\r\n      } else\r\n      {\r\n        this.noty.Show({title: titleNoty, message: result.data.message});\r\n      }\r\n    },\r\n\r\n    singIn : async function () {\r\n      {\r\n        const titleNoty = \"Регистрация в системе Fractalz\"\r\n        var result = await this.api.Registration(this.login, this.email, this.password)\r\n            .catch(response => {this.noty.Show({\r\n          title: titleNoty, message: response.response.data.message\r\n              });\r\n            });\r\n      }\r\n      const titleNoty = \"Регистрация в системе Fractalz\"\r\n      if (result.data.success)\r\n      {\r\n        this.noty.Show({title: titleNoty, message: \"Вы успешно зарегистрированы!\\rОсталось совсем чуть-чуть!\"});\r\n        this.type = \"D\"\r\n        return this.toSendCode();\r\n      } else\r\n      {\r\n        this.noty.Show({title: titleNoty, message: result.data.message});\r\n      }\r\n    },\r\n\r\n    isAuth()\r\n    {\r\n      if(this.$cookies.get(\"UserInfo\"))\r\n      {\r\n        this.login = this.$cookies.get(\"UserInfo\").login\r\n        this.password = this.$cookies.get(\"UserInfo\").password\r\n        this.email = this.$cookies.get(\"UserInfo\").email\r\n        console.log(this.$cookies.get(\"UserInfo\"))\r\n        return true;\r\n      }\r\n      return false;\r\n    },\r\n    logOut()\r\n    {\r\n      this.$cookies.set(\"UserInfo\", null)\r\n      this.$cookies.set(\"UserToken\", null)\r\n      this.Auth = false;\r\n      Vue.socket.close(1000, \"UserDisconnect\");\r\n      this.noty.Show({title : \"Выход из системы Fractalz\", message : \"Вы успешно покинули систему!\\rЖдем вас снова.\"});\r\n    },\r\n    logIn : async function () {\r\n      var result = await this.api\r\n          .Login(this.login, this.password)\r\n          .catch(response => {\r\n            this.noty.Show({\r\n          title: \"Вход в систему Fractalz\",\r\n          message: response.response.data.message\r\n        });\r\n      });\r\n      if(result.data.success)\r\n      {\r\n        this.$cookies.set(\"UserToken\", result.data.token);\r\n        this.$cookies.set(\"UserInfo\", result.data.user);\r\n        this.noty.Show({title : \"Вход в систему Fractalz\", message : \"Добро пожаловать!\\rВы успешно вошли в систему.\"});\r\n        this.connectWebSocket(result.data.user.id);\r\n        await this.$router.push({ name: 'DialogPage' })\r\n      }\r\n      else {\r\n        this.noty.Show({title : \"Вход в систему Fractalz\", message : \"Произошла ошибка.\\rПроверьте правильность данных!\"});\r\n      }\r\n    },\r\n   connectWebSocket : function (userId) {\r\n      Vue.socket = new WebSocket(Vue.prototype.$http.defaults.baseURL.replace('http', 'ws') + \"/ws/subscribe?idUser=\"+userId);\r\n      Vue.socket.onopen = Vue.socketEvents.onopen;\r\n      Vue.socket.onclose = Vue.socketEvents.onclose;\r\n      Vue.socket.onmessage = Vue.socketEvents.onmessage;\r\n      Vue.socket.onerror = Vue.socketEvents.onerror;\r\n    },\r\n    passReset: async function (){\r\n      var Reg = new RegExp(\"^(?=.*[A-Z]).{1,18}$\");\r\n      var reg = new RegExp(\"^(?=.*[a-z]).{1,18}$\");\r\n\r\n      if (!(this.newPassword1 === this.newPassword2))\r\n        return this.noty.Show({title : \"Сброс пароля в системе Fractalz\", message : \"Произошла ошибка.\\rВведенные пароли не совпадают\"});\r\n\r\n      if (!(this.newPassword2.length > 6))\r\n        return this.noty.Show({title : \"Сброс пароля в системе Fractalz\", message : \"Произошла ошибка.\\rПароль должен быть больше 6 символов!\"});\r\n\r\n      if (!(this.newPassword2.length < 18))\r\n        return this.noty.Show({title : \"Сброс пароля в системе Fractalz\", message : \"Произошла ошибка.\\rПароль должен быть меньше 18 символов!\"});\r\n\r\n      if (!(reg[Symbol.match](this.newPassword2)))\r\n        return this.noty.Show({title : \"Сброс пароля в системе Fractalz\", message : \"Произошла ошибка.\\rПароль должен содержать хотябы одну прописную букву!\"});\r\n\r\n      if (!(Reg[Symbol.match](this.newPassword2)))\r\n        return this.noty.Show({title : \"Сброс пароля в системе Fractalz\", message : \"Произошла ошибка.\\rПароль должен содержать хотябы одну заглавную букву!\"});\r\n      const valid = await this.api.ValidateCode(this.Authcode, this.email)\r\n      if (valid.data.success)\r\n      {\r\n        {\r\n          const result = await this.api.PasswordReset(this.existEmail, this.newPassword2).catch(response => {\r\n            this.noty.Show\r\n            ({\r\n              title: \"Сброс пароля в системе Fractalz\",\r\n              message: \"Произошла ошибка!\\rПроверьте введенные данные!\"\r\n            });\r\n          });\r\n          if (result.data.success) {\r\n            this.noty.Show({\r\n              title: \"Смена пароля в системе Fractalz\",\r\n              message: \"Пароль успешно изменен!\\rТеперь вы можете войти в свою учетную запись.\"\r\n            });\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n</script>\r\n\r\n<style>\r\n@import url(https://fonts.googleapis.com/css?family=Roboto:300);\r\n\r\n.login-page-vertical\r\n{\r\n  z-index: 0;\r\n  width:360px;\r\n  display: table;\r\n  margin: 0% auto;\r\n  vertical-align: middle;\r\n}\r\n.form\r\n{\r\n  z-index: 1;\r\n  background: #FFFFFF;\r\n  max-width: 360px;\r\n  margin: 10% auto auto auto;\r\n  padding: 35px;\r\n\r\n  text-align: center;\r\n  box-shadow: 0 0 20px 0 rgba(0, 0, 0, 0.2), 0 5px 5px 0 rgba(0, 0, 0, 0.24);\r\n}\r\n.form input\r\n{\r\n  font-family: \"Roboto\", sans-serif;\r\n  outline: 0;\r\n  background: #f2f2f2;\r\n  width: 100%;\r\n  border: 0;\r\n  margin: 0 0 15px;\r\n  padding: 15px;\r\n  box-sizing: border-box;\r\n  font-size: 14px;\r\n}\r\n.form button\r\n{\r\n  font-family: \"Roboto\", sans-serif;\r\n  text-transform: uppercase;\r\n  outline: 0;\r\n  background: #009788;\r\n  width: 100%;\r\n  border: 0;\r\n  padding: 15px;\r\n  color: #FFFFFF;\r\n  font-size: 14px;\r\n  cursor: pointer;\r\n  margin: 0px 0px 15px;\r\n}\r\n.form .registration-title\r\n{\r\n  color: #009788;\r\n  font-size: 16px;\r\n}\r\n.form .code-title\r\n{\r\n  color: #009788;\r\n  font-size: 18px;\r\n}\r\n.form .message\r\n{\r\n  margin: 0px 15px 15px;\r\n  color: #b3b3b3;\r\n  font-size: 12px;\r\n}\r\n.form .message a\r\n{\r\n  color: #009788;\r\n  cursor: pointer;\r\n  text-decoration: none;\r\n}\r\n.form .password-reset-text\r\n{\r\n  margin: 15px 0 0;\r\n  color: #b3b3b3;\r\n  font-size: 12px;\r\n}\r\n.form .reset-title{\r\n\r\n  margin: 0px 15px 15px;\r\n  color: #000000;\r\n  font-size: 15px;\r\n}\r\n.form .password-resetbutton\r\n{\r\n  color: #009788;\r\n  cursor: pointer;\r\n  text-decoration: none;\r\n  font-size: 12px;\r\n}\r\n\r\n.form .password-resetbutton-back\r\n{\r\n  color: #009788;\r\n  cursor: pointer;\r\n  text-decoration: none;\r\n  font-size: 12px;\r\n  margin: 15px 15px 15px;\r\n}\r\n\r\n</style>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/fractalz-electron/src/renderer/components/pages/RegistrationPage.vue b/fractalz-electron/src/renderer/components/pages/RegistrationPage.vue
--- a/fractalz-electron/src/renderer/components/pages/RegistrationPage.vue	(revision 201a276db21ec7b4eea5379924e8b080b25a4476)
+++ b/fractalz-electron/src/renderer/components/pages/RegistrationPage.vue	(date 1658835685792)
@@ -18,6 +18,8 @@
           <p class= "message">Нет аккаута? <a v-on:click="toCreateAccount()">Создать аккаунт</a></p>
           <p class= "password-reset-text"> Забыли пароль?</p>
           <p class= "password-resetbutton"> <a v-on:click="toResetPassword()">Нажмите чтобы восстановить доступ</a></p>
+          <p class= "message">Хотите зарегистрироваться с ЭЦП? <a v-on:click="toCreateDSAccount()"><br>Создать аккаунт с ЭЦП</a></p>
+          <p class= "message">Войти с цифровым ключём<a v-on:click="toLogInDS()"><br>Войти с цифровым ключём</a> </p>
         </div>
         <div v-if="type === 'C'" class="password-reset-form">
           <p class="reset-title"> Для восстановления доступа вам необходимо сбросить старый пароль и установить новый.
@@ -40,10 +42,30 @@
           <button class="modal-default-button mr-4 navTask dark-teal" v-on:click="toValidateCode()">Подтвердить</button>
           <p class="message"><a v-on:click="toCreateAccount()">Вернуться назад</a></p>
         </div>
-    </div>
+        <div v-if="type === 'E'" class="digital-signature-registration">
+          <p class="registration-title">Регистрация нового пользователя в системе с цифровым ключём</p>
+          <input type="text" v-model="login" placeholder="Логин"/>
+          <input type="text" v-model="email" placeholder="Почта"/>
+          <input type="password" v-model="password" placeholder="Пароль"/>
+          <button class="modal-default-button mr-4 navTask dark-teal" v-on:click="singInDS()">Создать</button>
+          <p class="message">Уже зарегистрированы? <a v-on:click="toSingIn()">Войти</a></p>
+
+        </div>
+        <div v-if="type === 'F'" class="digital-signature-login">
+          <input type="text" v-model="login" placeholder="Логин/Почта" />
+          <input type="password" v-model="password" placeholder="Пароль"
+                 @keyup.enter="logIn"/>
+          <button class="modal-default-button mr-4 navTask dark-teal" v-on:click="logIn()">Войти</button>
+          <button class="modal-default-button mr-4 navTask mt-1" v-if="Auth" style="background-color: darkred" v-on:click="logOut()">Выйти</button>
+          <p class= "password-reset-text"> Забыли пароль?</p>
+          <p class= "password-resetbutton"> <a v-on:click="toResetPassword()">Нажмите чтобы восстановить доступ</a></p>
+          <button class="modal-default-button mr-4 navTask dark-teal">Прикрепить документ</button>
+        </div>
+     </div>
   </div>
 </template>
 
+
 <script>
 import UserPart from "../../api/UserPart";
 import Vue from "vue";
@@ -83,6 +105,9 @@
     toCreateAccount : function () {
       return this.type = 'A';
     },
+    toCreateDSAccount: function (){
+      return this.type = 'E';
+    },
     toSingIn : function () {
       return this.type = 'B';
     },
@@ -92,6 +117,10 @@
     toBackFromReset:function(){
       return this.type = 'B';
     },
+    toLogInDS: function (){
+      return this.type = 'F'
+    },
+
     toSendCode: async function() {
       var result = await this.api.SendCode(this.email, this.GenRequest.true)
     },
Index: fractalz-electron/src/renderer/components/pages/ChatPage.vue
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><template>\r\n  <div class=\"chat-content-main d-flex flex-column\">\r\n    <div v-on:click=\"emojiHidden('hidden')\" id=\"chat\" class=\"chat col-inside-lg decor-default\">\r\n        <div class=\"chat-body\">\r\n          <div v-for=\"messageContent in messageContents\" :key=\"messageContent.$id\">\r\n            <answer-left-element v-if=\"messageContent.idSender !== idUserSender\"\r\n                                 :message=\"messageContent.text\"\r\n                                 :date-send=\"messageContent.dateCreated\"\r\n                                 :name=\"messageContent.nameSender\"\r\n\r\n                                 :avatar=\"messageContent.avatar\"\r\n                                 :status=\"messageContent.status\">\r\n            </answer-left-element>\r\n            <answer-right-element v-if=\"messageContent.idSender === idUserSender\"\r\n                                  :message=\"messageContent.text\"\r\n                                  :date-send=\"messageContent.dateCreated\"\r\n                                  :name=\"messageContent.nameSender\"\r\n\r\n                                  :avatar=\"messageContent.avatar\"\r\n                                  :status=\"messageContent.status\">\r\n\r\n            </answer-right-element>\r\n          </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div v-on=\"\" id=\"emojiblock\" class=\"emoji_block\" style=\"background: #cbd3da\" >\r\n      <VEmojiPicker @select=\"selectEmoji\"/>\r\n    </div>\r\n\r\n\r\n    <div class=\"d-flex align-items-center chat-content-footer\">\r\n      <a class=\"p-2 select\" title=\"Прикрепить документ\">\r\n          <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" color=\"#000000\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-file\">\r\n            <path d=\"M13 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V9z\">\r\n            </path>\r\n            <polyline points=\"13 2 13 9 20 9\">\r\n            </polyline>\r\n          </svg>\r\n        </a>\r\n\r\n      <textarea v-on:click=\"emojiHidden('hidden')\" v-model=\"message\" id=\"message\" class=\"p-2 textarea\" placeholder=\"Ваше сообщение\"></textarea>\r\n\r\n      <a v-on:click=\"emojiHidden('visible')\" class=\"p-2 select\" title=\"Emoji\" style=\"transform: rotate(0deg); right: 0\">\r\n        <svg width=\"25\" height=\"25\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M12 4a8 8 0 1 0 0 16 8 8 0 0 0 0-16zM2 12C2 6.477 6.477 2 12 2s10 4.477 10 10-4.477 10-10 10S2 17.523 2 12z\" fill=\"#000\"/><path d=\"M11 9.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zM16 9.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z\" fill=\"#000\"/><path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M9 15a1 1 0 0 1 1-1h4a1 1 0 1 1 0 2h-4a1 1 0 0 1-1-1z\" fill=\"#000\"/></svg>\r\n      </a>\r\n\r\n      <a v-on:click=\"sendMessage()\" class=\"p-2 select\" title=\"Отправить сообщение\" style=\"transform: rotate(45deg); right: 0\">\r\n         <svg width=\"24\" height =\"24\" color=\"#000000\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"feather feather-send\">\r\n            <line x1=\"22\" y1=\"2\" x2=\"11\" y2=\"13\"/>\r\n            <polygon points=\"22 2 15 22 11 13 2 9 22 2\"/>\r\n          </svg>\r\n        </a>\r\n\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport AnswerLeft from \"../elements/chat/AnswerLeft\";\r\nimport AnswerRight from \"../elements/chat/AnswerRight\";\r\nimport Vue from \"vue\";\r\nimport { VEmojiPicker } from 'v-emoji-picker';\r\n\r\n\r\nVue.component ('answer-left-element', AnswerLeft)\r\nVue.component ('answer-right-element', AnswerRight)\r\n\r\nexport default {\r\n  name: \"ChatPage\",\r\n  emoji: 'Demo',\r\n\r\n  components: {\r\n    VEmojiPicker\r\n  },\r\n\r\n  date() {\r\n    return {\r\n      messageContents: [],\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      message: '',\r\n      notyHeader: \"Диалог Fractalz\"\r\n    }\r\n  },\r\n  props: {\r\n    idUserSender: null,\r\n    dialogId: null,\r\n    api: Object,\r\n    noty: Object\r\n  },\r\n  mounted: async function () {\r\n    this.messageContents = [];\r\n    await this.getMessage();\r\n    Vue.socketEvents.messageReceive = this.onMessageReceive;\r\n    this.scroll();\r\n\r\n  },\r\n  methods: {\r\n    selectEmoji: function(emoji) {\r\n      console.log(emoji.data)\r\n      var textarea = document.getElementById(\"message\")\r\n      textarea.value += emoji.data;\r\n      \r\n    },\r\n    scroll: function () {\r\n      var block = document.getElementById(\"chat\");\r\n      block.scrollTop = block.scrollHeight;\r\n    },\r\n    onMessageReceive: function (message) {\r\n      console.log(message)\r\n      if (message.idSender != this.idUserSender) {\r\n        this.noty.Show({title: \"Новое сообщение от \", message: message.Text})\r\n      }\r\n      if (message.dialogId == this.dialogId) {\r\n        if (message != null) {\r\n          var arr = [];\r\n          arr = message;\r\n          this.messageContents.push(arr)\r\n          console.log(this.messageContents)\r\n        }\r\n        this.$forceUpdate();\r\n      }\r\n      //TODO :  + Подсветить жирным диалог который пришел\r\n    },\r\n    getMessage: async function () {\r\n      var result = await this.api\r\n          .GetMessages(this.dialogId, '', 100)\r\n          .catch(response => {\r\n            this.noty.Show({\r\n              title: this.notyHeader,\r\n              message: \"Произошла ошибка. Проверьте соединение с интернетом!\"\r\n            });\r\n          });\r\n      if (result.data.success) {\r\n        var arr = [];\r\n        if (result.data.messages != null) {\r\n          arr = result.data.messages.$values;\r\n          for (let j in arr) {\r\n            this.$set(this.messageContents, j, arr[j])\r\n          }\r\n          console.log(this.messageContents)\r\n          console.log(this.idUserSender)\r\n        }\r\n        this.$forceUpdate();\r\n      } else {\r\n        this.noty.Show({title: this.notyHeader, message: \"У вас нет сообщений начните диалог\"});\r\n      }\r\n    },\r\n    sendMessage: async function () {\r\n      var obj = {\r\n        userId: Vue.$cookies.get('UserInfo').id,\r\n        dialogId: this.dialogId,\r\n        message: this.message,\r\n        files: []\r\n      }\r\n      var result = await this.api\r\n          .CreateMessage(obj)\r\n          .catch(response => {\r\n            this.noty.Show({\r\n              title: this.notyHeader,\r\n              message: \"Произошла ошибка. Проверьте соединение с интернетом!\"\r\n            });\r\n          });\r\n      if (result.data.success) {\r\n        this.scroll();\r\n        console.log(result)\r\n        this.message = ''\r\n      } else {\r\n        this.noty.Show({title: this.notyHeader, message: \"Ошибка отправки сообщения\"});\r\n      }\r\n      this.onMessageReceive\r\n    },\r\n    updateMessage: async function (obj) {\r\n      var result = await this.api\r\n          .UpdateMessage(obj)\r\n          .catch(response => {\r\n            this.noty.Show({\r\n              title: this.notyHeader,\r\n              message: \"Произошла ошибка. Проверьте соединение с интернетом!\"\r\n            });\r\n          });\r\n      if (result.data.success) {\r\n        console.log(result)\r\n      } else {\r\n        this.noty.Show({title: this.notyHeader, message: \"Ошибка изменения сообщения\"});\r\n      }\r\n    },\r\n    sendReaction: async function () {\r\n      var result = await this.api\r\n          .ReactionMessage(obj)\r\n          .catch(response => {\r\n            this.noty.Show({\r\n              title: this.notyHeader,\r\n              message: \"Произошла ошибка. Проверьте соединение с интернетом!\"\r\n            });\r\n          });\r\n      if (result.data.success) {\r\n        console.log(result)\r\n      } else {\r\n        this.noty.Show({title: this.notyHeader, message: \"Ошибка изменения сообщения\"});\r\n      }\r\n    },\r\n    downloadFile: async function () {\r\n      var result = await this.api\r\n          .DownloadFile(obj)\r\n          .catch(response => {\r\n            this.noty.Show({\r\n              title: this.notyHeader,\r\n              message: \"Произошла ошибка. Проверьте соединение с интернетом!\"\r\n            });\r\n          });\r\n      if (result.data.success) {\r\n        console.log(result)\r\n      } else {\r\n        this.noty.Show({title: this.notyHeader, message: \"Ошибка загрузки файла\"});\r\n      }\r\n    },\r\n    emojiHidden: function (newVisibility) {\r\n      var emoji = document.getElementById(\"emojiblock\");\r\n      emoji.style.visibility = newVisibility;\r\n    },\r\n    deleteMessage: async function () {\r\n      var result = await this.api\r\n          .DeleteMessage(obj)\r\n          .catch(response => {\r\n            this.noty.Show({\r\n              title: this.notyHeader,\r\n              message: \"Произошла ошибка. Проверьте соединение с интернетом!\"\r\n            });\r\n          });\r\n      if (result.data.success) {\r\n        console.log(result)\r\n      } else {\r\n        this.noty.Show({title: this.notyHeader, message: \"Ошибка удаления сообщения\"});\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.chat-content-body{\r\n  width: 100%;\r\n  height: 100%;\r\n  position: absolute;\r\n}\r\n.chat-content-main {\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n.textarea{\r\n  resize: initial;\r\n  border: none;\r\n  outline: none;\r\n  width: 100%;\r\n  border-right: 1px solid #009788;\r\n  border-left: 1px solid #009788;\r\n}\r\n.emoji_block{\r\n  position: absolute;\r\n  visibility: hidden;\r\n  height: 437px;\r\n  width: 327px;\r\n  right: 0px;\r\n  bottom: 60px;\r\n  border-right-color: #0b0d0f;\r\n  border-right-style: solid;\r\n  border-right-width: 1px;\r\n  border-bottom-color: #0b0d0f;\r\n  border-bottom-style: solid;\r\n  border-bottom-width: 1px;\r\n  border-top-color: #0b0d0f;\r\n  border-top-style: solid;\r\n  border-top-width: 1px;\r\n  border-left-color: #0b0d0f;\r\n  border-left-style: solid;\r\n  border-left-width: 1px;\r\n\r\n}\r\n.select{\r\n  height: 100%;\r\n  cursor: pointer;\r\n}\r\n.chat-content-footer {\r\n  background-color: white;\r\n  bottom: 0;\r\n  border-top: 1px solid #009788;\r\n}\r\n\r\nbody{\r\n  margin-top:20px;\r\n  background:#eee;\r\n}\r\n.col-inside-lg {\r\n  padding: 20px;\r\n}\r\n.chat {\r\n  position: revert;\r\n  outline: none;\r\n  overflow: auto;\r\n  height: 100%;\r\n}\r\n.decor-default {\r\n  background-color: #ffffff;\r\n}\r\n.chat-users h6 {\r\n  font-size: 20px;\r\n  margin: 0 0 20px;\r\n}\r\n.chat-users .user {\r\n  position: relative;\r\n  padding: 0 0 0 50px;\r\n  display: block;\r\n  cursor: pointer;\r\n  margin: 0 0 20px;\r\n}\r\n.chat-users .user .avatar {\r\n  top: 0;\r\n  left: 0;\r\n}\r\n.chat .avatar {\r\n  width: 40px;\r\n  height: 40px;\r\n  position: absolute;\r\n}\r\n.chat .avatar img {\r\n  display: block;\r\n  border-radius: 20px;\r\n  height: 100%;\r\n}\r\n.chat .avatar .status.off {\r\n  border: 1px solid #5a5a5a;\r\n  background: #ffffff;\r\n}\r\n.chat .avatar .status.online {\r\n  background: #4caf50;\r\n}\r\n.chat .avatar .status.busy {\r\n  background: #ffc107;\r\n}\r\n.chat .avatar .status.offline {\r\n  background: #ed4e6e;\r\n}\r\n.chat-users .user .status {\r\n  bottom: 0;\r\n  left: 28px;\r\n}\r\n.chat .avatar .status {\r\n  width: 10px;\r\n  height: 10px;\r\n  border-radius: 5px;\r\n  position: absolute;\r\n}\r\n.chat-users .user .name {\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n  line-height: 20px;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n.chat-users .user .mood {\r\n  font: 200 14px/20px \"Raleway\", sans-serif;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n/*****************CHAT BODY *******************/\r\n.chat-body h6 {\r\n  font-size: 20px;\r\n  margin: 0 0 20px;\r\n}\r\n.chat-body .answer.left {\r\n  padding: 0 0 0 58px;\r\n  text-align: left;\r\n  float: left;\r\n}\r\n.chat-body .answer {\r\n  position: relative;\r\n  max-width: 600px;\r\n  overflow: hidden;\r\n  clear: both;\r\n}\r\n.chat-body .answer.left .avatar {\r\n  left: 0;\r\n}\r\n.chat-body .answer .avatar {\r\n  bottom: 36px;\r\n}\r\n.chat .avatar {\r\n  width: 40px;\r\n  height: 40px;\r\n  position: absolute;\r\n}\r\n.chat .avatar img {\r\n  display: block;\r\n  border-radius: 20px;\r\n  height: 100%;\r\n}\r\n.chat-body .answer .name {\r\n  font-size: 14px;\r\n  line-height: 36px;\r\n}\r\n.chat-body .answer.left .avatar .status {\r\n  right: 4px;\r\n}\r\n.chat-body .answer .avatar .status {\r\n  bottom: 0;\r\n}\r\n.chat-body .answer.left .text {\r\n  background: #ebebeb;\r\n  color: #333333;\r\n  border-radius: 8px 8px 8px 0;\r\n}\r\n.chat-body .answer .text {\r\n  padding: 12px;\r\n  font-size: 16px;\r\n  line-height: 26px;\r\n  position: relative;\r\n}\r\n.chat-body .answer.left .text:before {\r\n  left: -30px;\r\n  border-right-color: #ebebeb;\r\n  border-right-width: 12px;\r\n}\r\n.chat-body .answer .text:before {\r\n  content: '';\r\n  display: block;\r\n  position: absolute;\r\n  bottom: 0;\r\n  border: 18px solid transparent;\r\n  border-bottom-width: 0;\r\n}\r\n.chat-body .answer.left .time {\r\n  padding-left: 12px;\r\n  color: #333333;\r\n}\r\n.chat-body .answer .time {\r\n  font-size: 16px;\r\n  line-height: 36px;\r\n  position: relative;\r\n  padding-bottom: 1px;\r\n}\r\n/*RIGHT*/\r\n.chat-body .answer.right {\r\n  padding: 0 58px 0 0;\r\n  text-align: right;\r\n  float: right;\r\n}\r\n\r\n.chat-body .answer.right .avatar {\r\n  right: 0;\r\n}\r\n.chat-body .answer.right .avatar .status {\r\n  left: 4px;\r\n}\r\n.chat-body .answer.right .text {\r\n  background: #009788;\r\n  color: #ffffff;\r\n  border-radius: 8px 8px 0 8px;\r\n}\r\n.chat-body .answer.right .text:before {\r\n  right: -30px;\r\n  border-left-color: #009788;\r\n  border-left-width: 12px;\r\n}\r\n.chat-body .answer.right .time {\r\n  padding-right: 12px;\r\n  color: #333333;\r\n}\r\n\r\n/**************ADD FORM ***************/\r\n.chat-body .answer-add {\r\n  clear: both;\r\n  position: relative;\r\n  margin: 20px -20px -20px;\r\n  padding: 20px;\r\n  background: #46be8a;\r\n}\r\n.chat-body .answer-add input {\r\n  border: none;\r\n  background: none;\r\n  display: block;\r\n  width: 100%;\r\n  font-size: 16px;\r\n  line-height: 20px;\r\n  padding: 0;\r\n  color: #ffffff;\r\n}\r\n.chat input {\r\n  -webkit-appearance: none;\r\n  border-radius: 0;\r\n}\r\n.chat-body .answer-add .answer-btn-1 {\r\n  background: url(\"http://91.234.35.26/iwiki-admin/v1.0.0/admin/img/icon-40.png\") 50% 50% no-repeat;\r\n  right: 56px;\r\n}\r\n.chat-body .answer-add .answer-btn {\r\n  display: block;\r\n  cursor: pointer;\r\n  width: 36px;\r\n  height: 36px;\r\n  position: absolute;\r\n  top: 50%;\r\n  margin-top: -18px;\r\n}\r\n.chat-body .answer-add .answer-btn-2 {\r\n  background: url(\"http://91.234.35.26/iwiki-admin/v1.0.0/admin/img/icon-41.png\") 50% 50% no-repeat;\r\n  right: 20px;\r\n}\r\n.chat input::-webkit-input-placeholder {\r\n  color: #fff;\r\n}\r\n\r\n.chat input:-moz-placeholder { /* Firefox 18- */\r\n  color: #fff;\r\n}\r\n\r\n.chat input::-moz-placeholder {  /* Firefox 19+ */\r\n  color: #fff;\r\n}\r\n\r\n.chat input:-ms-input-placeholder {\r\n  color: #fff;\r\n}\r\n.chat input {\r\n  -webkit-appearance: none;\r\n  border-radius: 0;\r\n}\r\n</style>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/fractalz-electron/src/renderer/components/pages/ChatPage.vue b/fractalz-electron/src/renderer/components/pages/ChatPage.vue
--- a/fractalz-electron/src/renderer/components/pages/ChatPage.vue	(revision 201a276db21ec7b4eea5379924e8b080b25a4476)
+++ b/fractalz-electron/src/renderer/components/pages/ChatPage.vue	(date 1658825097422)
@@ -103,7 +103,7 @@
       console.log(emoji.data)
       var textarea = document.getElementById("message")
       textarea.value += emoji.data;
-      
+
     },
     scroll: function () {
       var block = document.getElementById("chat");
